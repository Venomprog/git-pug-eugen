@use 'sass:map';


/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
    Убираем внутренние отступы слева тегам списков,
    у которых есть атрибут class
   */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
    Убираем внешние отступы body и двум другим тегам,
    у которых есть атрибут class
   */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
    Убираем внешние отступы вертикали нужным тегам,
    у которых есть атрибут class
   */
:where(h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  ul,
  ol,
  dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
    Убираем стандартный маркер маркированному списку,
    у которого есть атрибут class
   */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
    Обнуляем вертикальные внешние отступы параграфа,
    объявляем локальную переменную для внешнего отступа вниз,
    чтобы избежать взаимодействие с более сложным селектором
    */
p {
  --paragraphMarginBottom: 24px;

  margin-block: 0;
}

/**
    Внешний отступ вниз для параграфа без атрибута class,
    который расположен не последним среди своих соседних элементов
   */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}


/**
    Упрощаем работу с изображениями и видео
   */
img,
video {
  display: block;
  max-width: 100%;

}

/**
    Наследуем свойства шрифт для полей ввода
   */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
  height: 100%;
  /**
      Убираем скачок интерфейса по горизонтали
      при появлении / исчезновении скроллбара
     */
  scrollbar-gutter: stable;
}

/**
    Плавный скролл
   */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
  min-height: 100%;
  /**
      Унифицированный интерлиньяж
     */
  line-height: 1.5;
}

/**
    Нормализация высоты элемента ссылки при его инспектировании в DevTools
   */
a:where([class]) {
  display: inline-flex;
}

/**
    Курсор-рука при наведении на элемент
   */
button,
label {
  cursor: pointer;
}





/**
    Чиним баг задержки смены цвета при взаимодействии с svg-элементами
   */
svg * {
  transition-property: fill, stroke;
}



/**
    Приведение рамок таблиц в классический 'collapse' вид
   */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
    Удаляем все анимации и переходы для людей,
    которые предпочитают их не использовать
   */
@media (prefers-reduced-motion: reduce) {

  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}


:root {
  --color-dark:
  --color-dark-alternate: #315912;
  --color-light:
    --color-dark-gray: #404040;
  --color-light-gray: #a99090;

  --border-radius: 30px;
  --border: 1px solid var(--color-light);



  --input-height: 54px;

  --container-width: 1440px;
  --container-padding-x: 103px;

  --transition-duration: 0.2s;

  --header-height: 90px;
}



body {
  font-family: var(--font-family-base);
  font-size: 16px;
  font-weight: 300;
  line-height: 1.75;

  background-color: var(--color-dark);

}

a,
button,
input,
textarea,
svg * {
  transition-duration: var(--transition-duration);
}

.button {

  font-weight: 500;
  font-size: 14px;
  line-height: 24px;
  text-align: center;

  &:hover {
    color: #2b5a8f;
  }

}






a:hover {
  color: var(--color-light-gray);
}

p {
  margin-block: 0;
}


p:not([class]):not(:last-child) {
  margin-bottom: 6px;
}

.container {
  max-width: calc(var(--container-width) + var(--container-padding-x) * 2);
  margin-inline: auto;
  padding-inline: var(--container-padding-x);
}

.container-wide {
  max-width: 1920px;
  margin-inline: auto;
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}



/*
  --primary1: teal;
  --pink: #ffc0cb;

  // fonts
  --font: 'Roboto', 'Arial', sans-serif;
  --black: #0c0c0c;
  // colors
  --background1: #f2f2f2;



}

// fonts
$font: var(--font);
// colors
$background1: var(--background1);
$black: var(--black);
$primary1: var(--primary1);
$pink: var(--pink);
$colors: (
  black: #000000
);

@function color($variant: black) {
  @return map.get($colors, $variant);
}

// media
$mediaWidthLaptop: 1340px;
$mediaWidthTablet: 767px;
$mediaWidthMobile: 320px;

*/